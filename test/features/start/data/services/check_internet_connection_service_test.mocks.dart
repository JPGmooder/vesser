// Mocks generated by Mockito 5.4.2 from annotations
// in vesser/test/features/start/data/services/check_internet_connection_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:vesser/src/features/start/data/services/check_internet_connection_service.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CheckInternetStatusService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCheckInternetStatusService extends _i1.Mock
    implements _i2.CheckInternetStatusService {
  @override
  _i3.Stream<bool> get internetConnectionStatusChanges => (super.noSuchMethod(
        Invocation.getter(#internetConnectionStatusChanges),
        returnValue: _i3.Stream<bool>.empty(),
        returnValueForMissingStub: _i3.Stream<bool>.empty(),
      ) as _i3.Stream<bool>);
}

/// A class which mocks [CheckInternetTypeService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCheckInternetTypeService<T> extends _i1.Mock
    implements _i2.CheckInternetTypeService<T> {
  @override
  _i3.Stream<T> get internetConnectionTypeChanges => (super.noSuchMethod(
        Invocation.getter(#internetConnectionTypeChanges),
        returnValue: _i3.Stream<T>.empty(),
        returnValueForMissingStub: _i3.Stream<T>.empty(),
      ) as _i3.Stream<T>);
}
